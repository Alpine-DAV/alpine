project( laghos )

set(laghos_sources serial/laghos_assembly_s.cpp
                   serial/laghos_s.cpp
                   serial/laghos_solver_s.cpp)

set(laghos_headers serial/laghos_assembly_s.hpp
                   serial/laghos_solver_s.hpp)


set(laghos_sources_mpi laghos_assembly.cpp
                       laghos.cpp
                       laghos_solver.cpp)

set(laghos_headers_mpi laghos_assembly.hpp
                       laghos_solver.hpp)

set(laghos_thirdparty_deps mfem)

# copy over the data/files
file(COPY data DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

# mfem does not build with both serial and mpi
if(MPI_FOUND AND ENABLE_MPI)
  list(APPEND laghos_thirdparty_deps mpi)
endif()

blt_add_executable(
    NAME        laghos_ser
    HEADERS     ${laghos_headers}
    SOURCES     ${laghos_sources} 
    DEPENDS_ON  ${laghos_thirdparty_deps}
    OUTPUT_DIR  ${CMAKE_CURRENT_BINARY_DIR})


# install target for laghos serial
install(TARGETS laghos_ser
        EXPORT  ascent
        LIBRARY DESTINATION examples/proxies/laghos
        ARCHIVE DESTINATION examples/proxies/laghos
        RUNTIME DESTINATION examples/proxies/laghos
)

if(MPI_FOUND AND ENABLE_MPI)

  blt_add_executable(
      NAME        laghos_mpi
      HEADERS     ${laghos_headers_mpi}
      SOURCES     ${laghos_sources_mpi} 
      DEPENDS_ON  ${laghos_thirdparty_deps} ascent_mpi
      OUTPUT_DIR  ${CMAKE_CURRENT_BINARY_DIR})

  # install target for laghos mpi 
  install(TARGETS laghos_mpi
          EXPORT  ascent
          LIBRARY DESTINATION examples/proxies/laghos
          ARCHIVE DESTINATION examples/proxies/laghos
          RUNTIME DESTINATION examples/proxies/laghos
  )
endif()

install(DIRECTORY data 
        DESTINATION examples/proxies/laghos)
